<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>